name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x, 22.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Setup environment
              uses: ./.github/actions/setup-env

            - name: Run tests
              run: npm test

            - name: Run tests with coverage
              run: npm run test:coverage

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage/lcov.info
                  fail_ci_if_error: false

    lint:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Setup environment
              uses: ./.github/actions/setup-env

            - name: Check HTML validation
              run: npm run lint:html

            - name: Check CSS validation
              run: |
                  npm install -g css-validator
                  css-validator css/style.css || true

            - name: Run security scan
              run: npm run security
              env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
              continue-on-error: true

    build:
        runs-on: ubuntu-latest
        needs: [test, lint]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Setup environment
              uses: ./.github/actions/setup-env

            - name: Build application
              run: |
                  echo "Building application..."
                  # For now, just copy files as this is a static application
                  mkdir -p dist
                  cp -r css/ dist/
                  cp -r js/ dist/
                  cp index.html dist/
                  echo "Build completed successfully!"

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: vibe-app-build
                  path: dist/

    deploy:
        runs-on: ubuntu-latest
        needs: [build]
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: vibe-app-build
                  path: dist/

            - name: Deploy to staging
              run: |
                  echo "Deploying to staging environment..."
                  # Add deployment steps here
                  echo "Deployment completed successfully!"

            - name: Notify deployment
              run: |
                  echo "Application deployed successfully!"
                  echo "Build ID: ${{ github.sha }}"
                  echo "Deployed from: ${{ github.ref }}"
